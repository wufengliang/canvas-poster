function t(t,e,i,n){return new(i||(i=Promise))((function(s,o){function r(t){try{l(n.next(t))}catch(t){o(t)}}function a(t){try{l(n.throw(t))}catch(t){o(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,a)}l((n=n.apply(t,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class e{constructor(t){this.positionMap={},this.defaultFontFamlily="sans-serif",this.options=t,this.init()}get ctx(){var t;return this.context=null!==(t=this.context)&&void 0!==t?t:this.options.element.getContext("2d")}init(){this.validator(),this.setDefaultFamlily(),this.initElement()}validator(){const{width:t,height:e}=this.options;if(!this.ctx)throw new Error("请确认canvas节点是否存在");if(!t||!e)throw new Error("请设置canvas的宽高度")}setDefaultFamlily(){}initElement(){const{element:t,width:e,height:i}=this.options;t.width=Number(`${e}`),t.height=Number(`${i}`),this.render()}render(){return t(this,void 0,void 0,(function*(){let t=null,e=0;for(;t=this.options.dataSource.shift();)yield this.renderItem(t,++e);const{success:i}=this.options;i&&i(this.options.element)}))}renderItem(e,i){return t(this,void 0,void 0,(function*(){const{type:t,value:n}=e;let{x:s=0,y:o=0,fixed:r=!1,parentId:a="",id:l=`${i}`}=n;if(r){const t=this.positionMap[a];s+=t?t.x:0,o+=t?t.y:0}const c=Object.assign(Object.assign({},n),{x:s,y:o,fixed:r,parentId:a,id:l});switch(t){case"image":yield this.renderImage(c);break;case"text":yield this.renderText(c);break;default:throw new Error(`当前还未适配${t}类型`)}}))}renderImage(e){return t(this,void 0,void 0,(function*(){const{r:t=0,width:i,height:n,id:s,x:o,y:r}=e;if(t>0&&(t!==i/2||t!==n/2))throw new Error("当前传入的半径值不到宽或高的一半,无法绘制圆形");const a=yield this.getRenderImageInstance(e.value),l=Object.assign(Object.assign({},e),{value:a});t?this.drawCircleImage(l):this.drawNormalImage(l),this.positionMap[s]={x:o,y:r}}))}renderText(e){return t(this,void 0,void 0,(function*(){const{ctx:t,defaultFontFamlily:i}=this,{fontSize:n=12,fontFamlily:s=i,color:o="#000",style:r={},value:a,x:l,y:c,id:h}=e,d=c+this.setTextStyle(Object.assign(Object.assign({},e),{fontSize:n,fontFamlily:s})).fontSize;t.fillText(a,l,d),this.positionMap[h]={x:l,y:d}}))}}class i extends e{constructor(t){super(t)}get ctx(){var t;return this.context=null!==(t=this.context)&&void 0!==t?t:this.options.element.getContext("2d")}getRenderImageInstance(e){return t(this,void 0,void 0,(function*(){const{element:t}=this.options;return new Promise((i=>{const n=t.createImage();n.src=e,n.onload=()=>i(n)}))}))}drawCircleImage(t){const{ctx:e}=this,{x:i,y:n,width:s,height:o,value:r,id:a}=t,l=i+s/2,c=n+o/2,h=Math.min(l,c);e.save(),e.beginPath(),e.arc(l,c,h,0,2*Math.PI),e.clip(),e.drawImage(r,l-h,c-h,2*h,2*h),e.restore()}drawNormalImage(t){const{ctx:e}=this,{x:i,y:n,width:s,height:o,value:r,id:a}=t;e.save(),e.beginPath(),e.drawImage(r,i,n,s,o),e.restore()}setTextStyle(t){const{ctx:e,defaultFontFamlily:i}=this,{fontSize:n=12,fontFamlily:s=i,color:o="#000",style:r={}}=t;e.font=`${n}px ${s}`,e.fillStyle=o,e.fillStyle=o;for(let t in r)t in e&&(e[t]=r[t]);return Object.assign(Object.assign({},t),{fontSize:n,fontFamlily:s,color:o,style:r})}}export{i as MiniCanvasInstance};
